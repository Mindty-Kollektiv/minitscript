.\" generated with Ronn-NG/v0.9.1
.\" http://github.com/apjanke/ronn-ng/tree/0.9.1
.TH "MINITSCRIPT" "7" "February 2024" ""
.SH "NAME"
\fBMinitScript\fR \- the mini (C++) transpileable scripting language\.
.P
MinitScript was developed as part of our TDME2 3D Engine \fIhttps://github\.com/Mindty\-Kollektiv/tdme2\fR to match the requirements for high performance script execution, as well as straight forward game logic scripting\.
.P
MinitScript might borrow some ideas from JavaScript, Kotlin, PHP and even C# and C++, which you might like and find familier\. Also note the focus on easy integration into other products and easy customizability and extendability\.
.SH "1\.1\. Open source"
.IP "\[ci]" 4
MinitScript is open source
.IP "\[ci]" 4
please check the license \fIhttps://github\.com/Mindty\-Kollektiv/minitscript/blob/main/LICENSE\fR
.IP "\[ci]" 4
you find the source code at \fIhttps://github\.com/Mindty\-Kollektiv/minitscript\fR
.IP "\[ci]" 4
here you find developer documentation including collaboration graphs and API \fIhttps://www\.mindty\.com/products/minitscript/documentation/\fR
.IP "" 0

.IP "" 0
.SH "1\.2\. Language features"
.IP "\[ci]" 4
Introduction to MinitScript language features:
.IP "\[ci]" 4
very small implementation of a scripting language
.IP "\[ci]" 4
runs on every CPU, OS, \|\.\|\.\|\. due to its simplicity, so its highly portable
.IP "\[ci]" 4
can be easily extended by writing state machine machine states and script methods in C++ as well as custom data types
.IP "\[ci]" 4
built\-in data types: null, boolean, integer, float, string, byte array, array, map and set, \|\.\|\.\|\.
.IP "\[ci]" 4
when calling script C++ methods or script functions with arguments it does optionally use references or value by copy
.IP "\[ci]" 4
supports functions/stacklets and recursion
.IP "\[ci]" 4
supports lamda functions and inline stacklets
.IP "\[ci]" 4
supports operators by operator to method mapping by a preprocessor run
.IP "\[ci]" 4
supports loops, conditions and switch/case/default blocks
.IP "\[ci]" 4
supports programming with classes style programming
.IP "\[ci]" 4
for built\-in datatypes: string, byte array, array, map and set, \|\.\|\.\|\.
.IP "\[ci]" 4
for script classes/objects
.IP "\[ci]" 4
for custom data types
.IP "" 0

.IP "\[ci]" 4
supports event like programming
.IP "\[ci]" 4
unicode support via UTF8
.IP "\[ci]" 4
can be transpiled to C++
.IP "" 0

.IP "" 0
.SH "1\.3\. 1\.0 BETA release TODO list"
.IP "\[ci]" 4
Whats left to do for 1\.0 BETA release
.IP "\[ci]" 4
some adjustments
.IP "\[ci]" 4
private members: transpilated/native: check output, it differs from interpreter mode
.IP "\[ci]" 4
multi line statement error messages are ugly as fuck???
.IP "\[ci]" 4
make event system optional???
.IP "\[ci]" 4
preprocessor definition for data files
.IP "\[ci]" 4
native scripts should also be executable without original scripts(optional) and with changed scripts(interpreted mode)
.IP "" 0

.IP "\[ci]" 4
tests
.IP "\[ci]" 4
native tests for MSC/MINGW
.IP "\[ci]" 4
bubblesort benchmark vs java script or other script engines, just to get the idea of current state of performance
.IP "" 0

.IP "\[ci]" 4
documentation
.IP "\[ci]" 4
detailed docu for methods and section
.IP "\[ci]" 4
\|\.\|\.\|\.
.IP "" 0

.IP "\[ci]" 4
installer for Windows
.IP "\[ci]" 4
installer for MacOSX
.IP "" 0

.IP "" 0

